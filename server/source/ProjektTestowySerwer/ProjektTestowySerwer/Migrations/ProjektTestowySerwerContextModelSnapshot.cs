// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektTestowySerwer.Models;

namespace ProjektTestowySerwer.Migrations
{
    [DbContext(typeof(ProjektTestowySerwerContext))]
    partial class ProjektTestowySerwerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("ProjektTestowySerwer.Models.Areas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AreasId");

                    b.Property<int>("Height")
                        .HasColumnName("AreasHeight");

                    b.Property<string>("Name")
                        .HasColumnName("AreasName")
                        .HasMaxLength(50);

                    b.Property<int>("ParentAreaId");

                    b.Property<int>("ProjectId");

                    b.Property<int>("Width")
                        .HasColumnName("AreasWidth");

                    b.Property<int>("X")
                        .HasColumnName("AreasX");

                    b.Property<int>("Y")
                        .HasColumnName("AreasY");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("ProjektTestowySerwer.Models.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoriesId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("CategoriesName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ProjektTestowySerwer.Models.Instances", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InstancesId");

                    b.Property<int>("AreaId");

                    b.Property<int>("ObjectId");

                    b.Property<int>("X")
                        .HasColumnName("InstancesX");

                    b.Property<int>("Y")
                        .HasColumnName("InstancesY");

                    b.HasKey("Id");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("ProjektTestowySerwer.Models.Objects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ObjectsId");

                    b.Property<int>("CategoryId");

                    b.Property<int>("Height")
                        .HasColumnName("ObjectsHeight");

                    b.Property<string>("ImagePath")
                        .HasColumnName("ObjectsImagePath")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("ObjectsName")
                        .HasMaxLength(100);

                    b.Property<int>("Width")
                        .HasColumnName("ObjectsWidth");

                    b.HasKey("Id");

                    b.ToTable("Objects");
                });

            modelBuilder.Entity("ProjektTestowySerwer.Models.Projects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProjectsId");

                    b.Property<string>("BackgroundFilePath")
                        .HasColumnName("ProjectsBackgroundFilePath")
                        .HasMaxLength(100);

                    b.Property<int>("GridHeight")
                        .HasColumnName("ProjectsGridHeight");

                    b.Property<int>("GridWidth")
                        .HasColumnName("ProjectsGridWidth");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("ProjectsName")
                        .HasMaxLength(50);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProjektTestowySerwer.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UsersId");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("UsersLogin")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("UsersPassword")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
